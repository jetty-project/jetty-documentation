<?xml version="1.0" encoding="utf-8"?>
<!--
//  ========================================================================
//  Copyright (c) 1995-2012 Mort Bay Consulting Pty. Ltd.
//  ========================================================================
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the Eclipse Public License v1.0
//  and Apache License v2.0 which accompanies this distribution.
//
//      The Eclipse Public License is available at
//      http://www.eclipse.org/legal/epl-v10.html
//
//      The Apache License v2.0 is available at
//      http://www.opensource.org/licenses/apache2.0.php
//
//  You may elect to redistribute this code under either of these licenses.
//  ========================================================================
-->
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="quickstart-running-jetty"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xl="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns2="http://www.w3.org/1998/Math/MathML"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Running Jetty</title>

  <para>To start Jetty on the default port of 8080, run the following
  command:</para>

  <para><screen><emphasis role="bold">&gt; cd $JETTY_HOME
&gt; java -jar start.jar</emphasis>
2013-09-06 13:52:43.326:INFO:oejs.Server:main: jetty-9.1.0
2013-09-06 13:52:43.358:INFO:oejdp.ScanningAppProvider:main: Deployment monitor [file:/home/gregw/src/jetty-9.1/jetty-distribution/target/distribution/webapps/] at interval 1
2013-09-06 13:52:43.390:INFO:oejs.ServerConnector:main: Started ServerConnector@2edf362d{HTTP/1.1}{0.0.0.0:8080}</screen></para>

  <para>You can point a browser at this server at <link
  linkend="???">http://localhost:8080</link>. Since release 9.1.0, the jetty
  distribution does not deploy any demo web applications, so to see a more
  interesting demonstration of the server you need to run from the demo-base
  directory as follows:</para>

  <screen><emphasis role="bold">&gt; cd $JETTY_HOME/demo-base/
&gt; java -jar ../start.jar</emphasis>
2013-09-06 13:56:35.939:WARN::main: demo test-realm is deployed. DO NOT USE IN PRODUCTION!
2013-09-06 13:56:35.943:INFO:oejs.Server:main: jetty-9.1.0-SNAPSHOT
2013-09-06 13:56:35.976:INFO:oejdp.ScanningAppProvider:main: Deployment monitor [file:/home/gregw/src/jetty-9.1/jetty-distribution/target/distribution/demo-base/webapps/] at interval 1
2013-09-06 13:56:36.240:INFO:oejpw.PlusConfiguration:main: No Transaction manager found - if your webapp requires one, please configure one.
2013-09-06 13:56:36.732:WARN::main: async-rest webapp is deployed. DO NOT USE IN PRODUCTION!
[...]
2013-09-06 13:56:38.572:INFO:oejsh.ContextHandler:main: Started o.e.j.w.WebAppContext@2757052e{/,file:/home/gregw/src/jetty-9.1/jetty-distribution/target/distribution/demo-base/webapps/ROOT/,AVAILABLE}{/ROOT}
2013-09-06 13:56:38.579:INFO:oejs.ServerConnector:main: Started ServerConnector@19e0cb78{HTTP/1.1}{0.0.0.0:8080}
</screen>

  <para>Pointing a browser at <link
  linkend="???">http://localhost:8080</link>, will now show a welcome page and
  several demo/test web applications.</para>

  <warning>
    <para>The demonstration web applications are not necessarily secure and
    should not be deployed in production web servers. </para>
  </warning>

  <section>
    <title>Creating a new Jetty Base</title>

    <para>The demo-base directory described above is an example of the
    jetty.base mechanism added in Jetty 9.1. A jetty base allows the
    configuration and web applications of a server instance to be stored
    separately from the jetty distribution, so that upgrades can be done with
    minimal disruption. Jetty's default configuration is based on two
    properties:</para>

    <variablelist>
      <varlistentry>
        <term>jetty.home</term>

        <listitem>
          <para>The property that defines the location of the jetty
          distribution, its libs, default modules and default XML files
          (typically start.jar, lib, etc)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>jetty.base</term>

        <listitem>
          <para>The property that defines the location of a specific instance
          of a jetty server, its configuration, logs and web applications
          (typically start.ini, start.d, logs and webapps)</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>The jetty.home and jetty.base properties may be explicitly set on
    the command line, or they can be inferred from the environment if used
    with commands like:</para>

    <screen><emphasis role="bold">&gt; cd $JETTY_BASE
&gt; java -jar $JETTY_HOME/start.jar</emphasis></screen>

    <para>The following commands create a new base directory and enable a HTTP
    connector and web application deployer in it:</para>

    <screen><emphasis role="bold">&gt; mkdir /tmp/mybase
&gt; cd /tmp/mybase
&gt; java -jar $JETTY_HOME/start.jar</emphasis>
WARNING: Nothing to start, exiting ...

Usage: java -jar start.jar [options] [properties] [configs]
       java -jar start.jar --help  # for more information

&gt;<emphasis role="bold">java -jar $JETTY_HOME/start.jar --add-to-startd=http,deploy</emphasis>
http            initialised in ${jetty.base}/start.d/http.ini (created)
server          initialised in ${jetty.base}/start.d/server.ini (created)
deploy          initialised in ${jetty.base}/start.d/deploy.ini (created)
MKDIR: ${jetty.base}/webapps
server          initialised in ${jetty.base}/start.d/server.ini

<emphasis role="bold">&gt; java -jar $JETTY_HOME/start.jar</emphasis>
2013-09-06 14:59:32.542:INFO:oejs.Server:main: jetty-9.1.0-SNAPSHOT
2013-09-06 14:59:32.572:INFO:oejdp.ScanningAppProvider:main: Deployment monitor [file:/tmp/mybase/webapps/] at interval 1
2013-09-06 14:59:32.602:INFO:oejs.ServerConnector:main: Started ServerConnector@405a2273{HTTP/1.1}{0.0.0.0:8080}

[...]</screen>
  </section>

  <section xml:id="quickstart-changing-jetty-port">
    <title>Changing the Jetty Port</title>

    <para>You can configure Jetty to run on a different port by setting the
    <code>jetty.port</code> Property on the command line:</para>

    <para><screen><emphasis role="bold">&gt; cd $JETTY_HOME/demo-base
&gt; java -jar start.jar jetty.port=8081</emphasis></screen></para>

    <para>Alternatively, property values can be added to the effective command
    line built from the <filename>start.ini</filename> file and
    <filename>start.d/*.ini</filename> files. By default, the jetty
    distribution defines the jetty.port property in the
    <filename>start.d/http.ini</filename> file, which may be edited to set
    another value. </para>

    <note>
      <para>The configuration by properties works via the following
      chain:</para>

      <itemizedlist>
        <listitem>
          <para>The start.d/http.ini file is part of the effective command
          line and contains the --module=http argument which activates the
          http module</para>
        </listitem>

        <listitem>
          <para>The modules/http.mod file defines the http module which
          specifies the etc/jetty-http.xml configuration file and the template
          ini properties it uses.</para>
        </listitem>

        <listitem>
          <para>The jetty.port property is used by the Property XML element in
          etc/jetty.http.xml to inject the ServerConnector instance with the
          port</para>
        </listitem>
      </itemizedlist>

      <para>For more information see the <link
      linkend="quickstart-config">Quickstart Configuration Guide</link> and
      <link linkend="configuring-connectors">Configuring
      Connectors.</link></para>
    </note>
  </section>

  <section xml:id="quickstart-starting-https">
    <title>Starting HTTPS</title>

    <para>To add the HTTPS connector to a jetty configuration, the https
    module can be activated by the following command:</para>

    <screen><emphasis role="bold">&gt; java -jar start.jar --add-to-startd=https</emphasis>
https           initialised in ${jetty.home}/start.d/https.ini (created)
ssl             initialised in ${jetty.home}/start.d/ssl.ini (created)
server          enabled in     ${jetty.home}/start.ini
resources       enabled in     ${jetty.home}/start.ini
ext             enabled in     ${jetty.home}/start.ini

<emphasis role="bold">&gt; java -jar start.jar</emphasis>
2013-09-06 13:52:43.326:INFO:oejs.Server:main: jetty-9.1.0
[...]</screen>

    <para>The --add-to-startd command sets up the effective command line in the
    ini files to run a https connection as follows:</para>

    <itemizedlist>
      <listitem>
        <para>creates the https.ini file that activates and configures the
        https connector module. The https module adds the
        <filename>etc/jetty-https.xml</filename> file to the effective command
        line. </para>
      </listitem>

      <listitem>
        <para>creates the <filename>start.d/ssl.ini</filename> file that
        activates and configures the SSL keystore using demonstration
        passwords. The ssl module adds the
        <filename>etc/jetty-ssl.xml</filename> file to the effective command
        line.</para>
      </listitem>

      <listitem>
        <para>checks for the existence of a <filename>etc/keystore</filename>
        file and if not present, downloads a demonstration keystore
        file.</para>
      </listitem>
    </itemizedlist>

    <note>
      <para>If a single start.ini file is preferred over individual
      <filename>start.d/*.ini</filename> files, then the option
      --add-to-start=module may be used to append the module activation to
      the start.ini file rather than create a file in start.d </para>
    </note>
  </section>

  <section>
    <title>More start.jar options</title>

    <para>The job of the <code>start.jar</code> is to interpret the command
    line, <filename>start.ini</filename> and <code>start.d</code> to build a
    Java classpath and list of properties and configuration files to pass to
    the main class of the Jetty XML configuration mechanism. The
    <code>start.jar</code> mechanism has many options which are documented in
    <xref linkend="advanced-jetty-start"/> and you can see them in summary by
    using the command:</para>

    <para><screen>&gt; java -jar start.jar --help</screen></para>
  </section>
</section>
