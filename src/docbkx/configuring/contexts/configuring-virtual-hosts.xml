<?xml version="1.0" encoding="utf-8"?>
<!--
//  ========================================================================
//  Copyright (c) 1995-2012 Mort Bay Consulting Pty. Ltd.
//  ========================================================================
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the Eclipse Public License v1.0
//  and Apache License v2.0 which accompanies this distribution.
//
//      The Eclipse Public License is available at
//      http://www.eclipse.org/legal/epl-v10.html
//
//      The Apache License v2.0 is available at
//      http://www.opensource.org/licenses/apache2.0.php
//
//  You may elect to redistribute this code under either of these licenses.
//  ========================================================================
-->
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="configuring-virtual-hosts"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xl="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns2="http://www.w3.org/1998/Math/MathML"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Configuring Virtual Hosts</title>

  <para>A virtual host is an alternative name, registered in DNS, for an IP
  address such that multiple domain names will resolve to the same IP of a
  shared server instance. If the content to be served to the aliases names is
  different, then a virtual host need to be configured for each deployed
  context to indicate which names a context will respond to. </para>

  <para>Virtual hosts are set on a context by calling the <link
  xl:href="@JDURL@/org/eclipse/jetty/server/handler/ContextHandler.html#setVirtualHosts(java.lang.String[])"><code>setVirtualHosts</code></link>
  or <link
  xl:href="@JDURL@/org/eclipse/jetty/server/handler/ContextHandler.html#addVirtualHosts(java.lang.String[])"><code>addVirtualHost</code></link>
  method which can be done either</para>

  <itemizedlist>
    <listitem>
      <para>Using a context XML file in the webapps directory (see the example
      in <link
      xl:href="@GITURL@/tests/test-webapps/test-jetty-webapp/src/main/config/webapps/test.xml">test.xml</link>
      in the jetty distribution).</para>
    </listitem>

    <listitem>
      <para>Using a <filename>WEB-INF/jetty-web.xml</filename> file
      (deprecated).</para>
    </listitem>

    <listitem>
      <para>Creating a custom deployer with a binding to configure virtual
      hosts for all contexts found in the same webapps directory.</para>
    </listitem>

    <listitem>
      <para>Calling the API directly on an embedded usage.</para>
    </listitem>
  </itemizedlist>

  <section xml:id="configuring-a-virtual-host">
    <title>Virtual Host Names</title>

    <para>Jetty supports the following styles of virtual host name:</para>

    <variablelist>
      <varlistentry>
        <term>www.hostname.com</term>

        <listitem>
          <para>A fully qualified host name. It is important to list all
          variants as a site may receive traffic from both www.hostname.com
          and just hostname.com</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>*.hostname.com</term>

        <listitem>
          <para>A wildcard qualified host which will match only one level of
          arbitrary names. *.foo.com will match www.foo.com and m.foo.com, but
          not www.other.foo.com</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>10.0.0.2</term>

        <listitem>
          <para>An IP address may be given as a virtual host name to indicate
          that a context should handle requests received on that server port
          that do not have a host name specified (HTTP/0.9 or HTTP/1.0)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>@ConnectorName</term>

        <listitem>
          <para>A connector name, which is not strictly a virtual host, but
          instead will only match requests that are received on connectors that
          have a matching name set with <link
          xl:href="@JDURL@/org/eclipse/jetty/server/AbstractConnector.html#setName(java.lang.String)">Connector.setName(String)</link>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>www.√integral.com</term>

        <listitem>
          <para>Non ascii and <link
          xl:href="http://en.wikipedia.org/wiki/Internationalized_domain_name">IDN</link>
          domain names can be set as virtual hosts using <link
          xl:href="http://en.wikipedia.org/wiki/Punycode">Puny Code</link>
          equivalents that may be obtained from a <link
          xl:href="http://network-tools.com/idn-convert.asp">Punycode/IDN
          converters</link>. For example if the non ascii domain name
          <literal>www.√integral.com</literal> is given to a browser, then it
          will make a request that uses the domain name
          <literal>www.xn--integral-7g7d.com</literal>, which is the name that
          should be added as the virtual host name.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>
</section>
