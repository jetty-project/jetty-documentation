<?xml version="1.0" encoding="utf-8"?>
<!--
//  ========================================================================
//  Copyright (c) 1995-2012 Mort Bay Consulting Pty. Ltd.
//  ========================================================================
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the Eclipse Public License v1.0
//  and Apache License v2.0 which accompanies this distribution.
//
//      The Eclipse Public License is available at
//      http://www.eclipse.org/legal/epl-v10.html
//
//      The Apache License v2.0 is available at
//      http://www.opensource.org/licenses/apache2.0.php
//
//  You may elect to redistribute this code under either of these licenses.
//  ========================================================================
-->
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="contributing-documentation"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xl="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns2="http://www.w3.org/1998/Math/MathML"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Documentation</title>

  <para>This document is produced using a combination of maven, git, and
  docbook. We welcome anyone and everyone to contribute to the content of this
  book. Below is the information on how to obtain the source of this book and
  to build it as well as information on how to contribute back to it.</para>

  <para>Note: All contributions to this documentation are under the EPL and
  the copyright is assigned to Mortbay.</para>

  <section>
    <title>Tools</title>

    <para>You will need:</para>

    <variablelist>
      <varlistentry>
        <term>git</term>

        <listitem>
          <para>This project is located at github so if you do not have a
          GitHub account already you should register for one. You can do that
          at <link xl:href="https://github.com">Github</link></para>

          <para>You can go one of two ways for using git, if you are familiar
          with SCM's and the command line interface then feel free to install
          and use git from there. Otherwise we would recommend you use the
          github client itself as it will help with some of the workflow
          involved with working with git.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>maven 3</term>

        <listitem>
          <para>We build the project with maven 3 which can be found at <link
          xl:href="http://maven.apache.org">Apache Maven</link></para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section>
    <title>Getting Started (cli)</title>

    <para>First you need to obtain the source of the documentation
    project.</para>

    <para>Clone the repository:</para>

    <screen linenumbering="numbered"><![CDATA[

$ git clone git@github.com:jetty-project/jetty-documentation.git
      
    ]]></screen>

    <para>You will now have a local directory with all of the
    jetty-documentation. Now we move on to building it.</para>

    <screen><![CDATA[

$ cd jetty-documentation 
$ mvn install

    ]]></screen>

    <para>While maven is running you may see a lot of files being downloaded.
    If you are not familiar with maven, then what you are seeing is maven
    setting up the execution environment for generating the documentation.
    This build should produce xhtml, as well as any other output formats that
    we are working with as time goes on. The downloads are all of the java
    dependencies that are required to make this build work. After a
    while the downloading will stop and you'll see the execution of the
    docbkx-maven-plugin.</para>

    <screen><![CDATA[

[INFO] --- docbkx-maven-plugin:2.0.13:generate-xhtml (documentation identifier) @ jetty-documentation ---
[INFO] Processing input file: jetty.xml
[INFO] Dumping to /home/jesse/src/projects/jetty/jetty-documentation/target/docbkx/generated/(gen)jetty.xml
[INFO] Applying customization parameters
[INFO] Chunking output. &lt;?xml version="1.0" encoding="UTF-8"?&gt;
[INFO] See /home/jesse/src/projects/jetty/jetty-documentation/target/docbkx/xhtml/jetty for generated file(s)
[INFO] Executing tasks
[INFO] Executed tasks

    ]]></screen>

    <para>The build is finished once you see a message akin to this:</para>

    <screen><![CDATA[

[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 7.014s
[INFO] Finished at: Tue Oct 25 14:15:37 CDT 2011
[INFO] Final Memory: 14M/229M
[INFO] ------------------------------------------------------------------------

    ]]></screen>

    <para>You may now open your web browser and browse to the first page of
    the html output to see what you have produced! Generally you can do this
    with File -&gt; Open File -&gt; which will open a file system browsing
    screen, navigate to your jetty-documentation directory and then further
    into target/docbkx/xhtml/jetty/jetty.html which is the first page of the
    produced documentation.</para>

    <para><emphasis>Note: if the build is broken, feel free to notify
    us.</emphasis></para>
  </section>

  <section>
    <title>Making Changes</title>

    <para>Now that you have built the documentation, you want to edit it and
    make some changes. We'll now have to take a bit of as step back and look
    at how git and github works. In the above example you have cloned directly
    from our canonical documentation repository. Obviously we can not allow
    anyone immediate access to this repository so you must make a fork of it
    for your own and then issue back pull requests to build up documentation
    karma. In English that means that you would go to the url of the
    documentation in github:</para>

    <para><screen><![CDATA[https://github.com/jetty-project/jetty-documentation]]></screen></para>

    <para>When you are on this page you will see a little button called 'Fork'
    which you can click and you will be taken back to your main page
    on github where you have a new repository. When you checkout this
    repository you are free to commit to your heart's delight all the changes
    you so direly wish to see in the Jetty documentation. You can clone it to
    your local machine and build it the same way as above. So let's start small with a
    little example. Find some paragraph in the documentation that you think
    needs changed. Locate that in the local checkout and make the change. Now
    follow the process to push that change back into Jetty proper. Do make
    sure the change works and the build isn't broken though so make sure you
    run maven and check the output. Then commit the change.</para>

    <screen><![CDATA[

$ git commit -m "Tweaked the introduction to fix a horrid misspelled word." src/docbkbx/topics/introduction/topic.xml

    ]]></screen>

    <para>This will commit the change in your local repository. You can
    then push the change up to your repository on github.</para>

    <screen><![CDATA[

$ git push

    ]]></screen>

    <para>Now you'll see some output showing that your change has been
    propagated to your repository on github. In fact if you navigate to that
    repository at the top of the files list you should see your comment there.
    Success, your change is now positioned for notifying us about it! If you
    click on the commit message itself you'll be taken to a screen that shows
    what files were changed in that commit. In the upper right corner is a
    button for 'Pull Request'. When you select this and follow the workflow we
    will then be notified of your contribution and will be able to apply it to
    our git repository upon review.</para>

    <para>Thats it! You have successfully contributed to the documentation
    efforts of the Jetty project. After enough of these sorts of contributions
    and building up good community karma, you may be asked to join us as a
    commiter on the documentation.</para>
  </section>

  <section>
    <title>Conventions</title>

    <para>Below is list of conventions that should be followed when developing
    documentation within this framework. These are not set in stone and should
    be updated as we learn more.</para>

    <variablelist>
      <varlistentry>
        <term>build before committing</term>

        <listitem>
          <para>We have an xmlfresh maven plugin that reformats the code to
          the standards for the project. This is to prevent wide spread merge
          conflict between commits. The line wrap is set to 120 and the indent
          is 2 spaces, never tab characters. There are a handful of tags that
          render inline to the para tags, these are found in the maven
          configuration of the xmlfresh-maven-plugin.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>xml:id</term>

        <listitem>
          <para>Critically important for being able to generate url's that can
          be used in a persistent fashion. Without xml:id's the chapters and
          sections will have generated id which are rooting in obscure
          location based voodoo. A url using these 'e12c8673' type links will
          not be durable across generations of the documentation. These
          xml:id's need to be used on chapters and sections two deep, and
          anywhere that you intend to cross link deeper.</para>

          <para>The xml:id values go into a global namespace so they must be
          unique across the entire document or the last example will win and
          any cross links will go there. We will have a maven plugin that will
          fail the build on detecting this soon.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>version differences</term>

        <listitem>
          <para>in general differences in functionality within a major should
          go into nested sections and use titles like 'Prior to: ##' or 'In
          version: ##'</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>license blocks</term>

        <listitem>
          <para>each xml file should contain the license block that exists in
          the jetty.xml file and a copy has been added to the bottom of this
          page as well for reference. It should occupy the second through
          eighteeth lines while the first line should be the xml
          descriptor.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <screen linenumbering="numbered"><![CDATA[

<?xml version="1.0" encoding="utf-8"?>
<!--
//  ========================================================================
//  Copyright (c) 1995-2012 Mort Bay Consulting Pty. Ltd.
//  ========================================================================
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the Eclipse Public License v1.0
//  and Apache License v2.0 which accompanies this distribution.
//
//      The Eclipse Public License is available at
//      http://www.eclipse.org/legal/epl-v10.html
//
//      The Apache License v2.0 is available at
//      http://www.opensource.org/licenses/apache2.0.php
//
//  You may elect to redistribute this code under either of these licenses.
//  ========================================================================
-->

    ]]></screen>

    <para>Some admonition examples:</para>

    <note>
      <para>A note about the previous case to be aware of.</para>
    </note>

    <important>
      <para>Important notes are marked with an icon.</para>
    </important>

    <tip>
      <para>Tips that make your life easier.</para>
    </tip>

    <caution>
      <para>Places where you have to be careful what you are doing.</para>
    </caution>

    <warning>
      <para>Where extreme care has to be taken. Data corruption or other nasty
      things may occur if these warnings are ignored.</para>
    </warning>
  </section>
</section>
