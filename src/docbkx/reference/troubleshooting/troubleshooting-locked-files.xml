<?xml version="1.0" encoding="utf-8"?>
<!--
//  ========================================================================
//  Copyright (c) 1995-2012 Mort Bay Consulting Pty. Ltd.
//  ========================================================================
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the Eclipse Public License v1.0
//  and Apache License v2.0 which accompanies this distribution.
//
//      The Eclipse Public License is available at
//      http://www.eclipse.org/legal/epl-v10.html
//
//      The Apache License v2.0 is available at
//      http://www.opensource.org/licenses/apache2.0.php
//
//  You may elect to redistribute this code under either of these licenses.
//  ========================================================================
-->
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="troubleshooting-locked-files-on-windows"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xl="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns2="http://www.w3.org/1998/Math/MathML"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Troubleshooting Locked Files on Windows</title>

  <para>Jetty buffers static content for webapps such as HTML files, CSS
  files, images, etc. If you are using NIO connectors, Jetty uses
  memory-mapped files to do this. The problem is that on Windows, memory
  mapping a file causes the file to lock, so that you cannot update or replace
  the file. Effectively this means that you have to stop Jetty to update a
  file.</para>

  <section>
    <title>Remedy</title>

    <para>Jetty provides a configuration switch in the
    <filename>webdefault.xml</filename> file for the DefaultServlet that
    enables or disables the use of memory-mapped files. If you are running on
    Windows and are having file-locking problems, you should set this switch
    to disable memory-mapped file buffers.</para>

    <para>The default <filename>webdefault.xml</filename> file is found in the
    jetty distribution under the <filename>etc/</filename> directory or in the
    <filename>jetty-webapp-${version}.jar</filename> artifact at
    <filename>org/eclipse/jetty/webapp/webdefault.xml</filename>. Edit the
    file in the distribution or extract it to a convenient disk location and
    edit it to change <code>useFileMappedBuffer</code> to false. The easiest
    option is to simply edit the default file contained in the jetty
    distribution itself.</para>

    <informalexample>
      <programlisting language="xml">
&lt;init-param&gt;
   &lt;param-name&gt;useFileMappedBuffer&lt;/param-name&gt;
   &lt;param-value&gt;true&lt;/param-value&gt; &lt;!-- change to false --&gt;
 &lt;/init-param&gt;

    </programlisting>
    </informalexample>

    <para>Make sure to apply your custom <filename>webdefault.xml</filename>
    file to all of your webapps. You can do that by changing the configuration
    of the Deployment Manager in
    <filename>etc/jetty-deploy.xml</filename>.</para>

    <informalexample>
      <programlisting language="xml">
&lt;Call id="webappprovider" name="addAppProvider"&gt;
  &lt;Arg&gt;
    &lt;New class="org.eclipse.jetty.deploy.providers.WebAppProvider"&gt;
      .
      .
      &lt;!-- this should be the new custom webdefault.xml or change should be made in this file --&gt;
      &lt;Set name="defaultsDescriptor"&gt;&lt;Property name="jetty.home" default="." /&gt;/etc/webdefault.xml&lt;/Set&gt;
      &lt;Set name="scanInterval"&gt;1&lt;/Set&gt;
      &lt;Set name="extractWars"&gt;true&lt;/Set&gt;
      .
      .
    &lt;/New&gt;
  &lt;/Arg&gt;
&lt;/Call&gt;

    </programlisting>
    </informalexample>

    <para>Alternatively, if you have individually configured your webapps with
    context xml files, you need to call the
    <code>WebAppContext.setDefaultsDescriptor(String path)</code>
    method:</para>

    <informalexample>
      <programlisting language="xml">
&lt;New id="myWebAppContext"  class="org.eclipse.jetty.webapp.WebAppContext"&gt;
  &lt;Set name="contextPath"&gt;/&lt;/Set&gt;
  &lt;Set name="war"&gt;./webapps/fredapp&lt;/Set&gt;
  &lt;Set name="defaultsDescriptor"&gt;/home/fred/jetty/mywebdefaults.xml&lt;/Set&gt;
  .
  .
&lt;/New&gt;

    </programlisting>
    </informalexample>

    <para>Instead, you could redefine the DefaultServlet in your web.xml file,
    making sure to set useFileMappedBuffer to false:</para>

    <programlisting language="xml">
&lt;web-app ...&gt;
 ...
 &lt;servlet&gt;
     &lt;servlet-name&gt;Default&lt;/servlet-name&gt;
     &lt;servlet-class&gt;org.eclipse.jetty.servlet.DefaultServlet&lt;/servlet-class&gt;
     &lt;init-param&gt;
       &lt;param-name&gt;useFileMappedBuffer&lt;/param-name&gt;
       &lt;param-value&gt;false&lt;/param-value&gt;
     &lt;/init-param&gt;
     &lt;load-on-startup&gt;0&lt;/load-on-startup&gt;
   &lt;/servlet&gt;
 ...
 &lt;/web-app&gt;

    </programlisting>
  </section>

  <section>
    <title>Remedy when using ResourceHandler</title>

    <para>When using a <classname>ResourceHandler</classname> to serve static
    content, the use of memory mapped buffers can be disabled using the
    method <link
    xl:href="@JDURL@/org/eclipse/jetty/server/handler/ResourceHandler.html#setMinMemoryMappedContentLength(int)">
    <code>setMinMemoryMappedContentLength(-1)</code></link>.

    As per the Javadoc, passing a value of <code>-1</code> to this method
    indicates that no memory mapped buffers shall be used by this
    <classname>ResourceHandler</classname> instance.</para>

    <para>This solution may be preferable when using Jetty in embedded mode, where
    editing the <filename>webdefault.xml</filename> for a
    <classname>WebAppContext</classname> is not appropriate or using a
    <classname>DefaultServlet</classname> is undesirable.</para>

    <programlisting language="java">
  Server server = new Server(8080);

  ResourceHandler handler = new ResourceHandler();
  handler.setMinMemoryMappedContentLength(-1);
  handler.setResourceBase(&quot;/path/to/static/content&quot;);

  server.setHandler(handler);
  server.start();
  server.join();
    </programlisting>
  </section>

  <section>
    <title>Alternate Remedy</title>

    <para>You can force a <code>WebAppContext</code> to always copy a web app
    directory on deployment. The base directory of your web app (ie the root
    directory where your static content exists) will be copied to the <link
    linkend="ref-temporary-directories">temp directory</link>. Configure this
    in an xml file like so:</para>

    <informalexample>
      <programlisting language="xml">
&lt;New id="myWebAppContext"  class="org.eclipse.jetty.webapp.WebAppContext"&gt;
  &lt;Set name="contextPath"&gt;/&lt;/Set&gt;
  &lt;Set name="war"&gt;./webapps/fredapp&lt;/Set&gt;
  &lt;Set name="copyWebDir"&gt;true&lt;/Set&gt;
  .
  .
&lt;/New&gt;
    </programlisting>

      <note>
        <para>Be careful with this option when using an explicitly set<link
        linkend="ref-temp-directories"> temp directory</link> name - as the
        name of the temp directory will not unique across redeployments,
        copying the static content into the same directory name each time may
        not avoid the locking problem.</para>
      </note>
    </informalexample>
  </section>
</section>
