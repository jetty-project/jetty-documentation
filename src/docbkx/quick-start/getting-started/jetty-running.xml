<?xml version="1.0" encoding="utf-8"?>
<!--
//  ========================================================================
//  Copyright (c) 1995-2012 Mort Bay Consulting Pty. Ltd.
//  ========================================================================
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the Eclipse Public License v1.0
//  and Apache License v2.0 which accompanies this distribution.
//
//      The Eclipse Public License is available at
//      http://www.eclipse.org/legal/epl-v10.html
//
//      The Apache License v2.0 is available at
//      http://www.opensource.org/licenses/apache2.0.php
//
//  You may elect to redistribute this code under either of these licenses.
//  ========================================================================
-->
<section version="5.0"
xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
xml:id="quickstart-running-jetty" xmlns="http://docbook.org/ns/docbook"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema"
xmlns:xl="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude"
xmlns:ns2="http://www.w3.org/1998/Math/MathML" xmlns:ns="http://docbook.org/ns/docbook">
  <title>Running Jetty</title>
  <para>To start Jetty on the default port of 8080, run the following command:</para>
  <para>
    <code>&gt; java -jar start.jar</code>
  </para>
  <para>You should see about twenty lines of logged INFO statements similar to the following, informing you of the
  components being started:</para>
  <informalexample>
    <programlisting language="text">
<![CDATA[2012-10-22 16:02:24.988:INFO:oejs.Server:main: jetty-9.0.0-M2 
2012-10-22 16:02:25.040:INFO:oejs.NCSARequestLog:main: Opened /home/gregw/src/jetty-9/jetty-distribution/target/distribution/logs/2012_10_22.request.log
2012-10-22 16:02:25.115:INFO:oejs.ServerConnector:main: Started ServerConnector@6aeeafb{HTTP/1.1}{0.0.0.0:8080} 
2012-10-22 16:02:25.348:INFO:oejs.ServerConnector:main: Started ServerConnector@24a45e{SSL-http/1.1}{0.0.0.0:8443} 
2012-10-22 16:02:25.357:INFO:oejdp.ScanningAppProvider:main: Deployment monitor [file:/home/gregw/src/jetty-9/jetty-distribution/target/distribution/webapps/] at interval 1 
2012-10-22 16:02:25.688:INFO:oejd.DeploymentManager:main: Deployable added:/home/gregw/src/jetty-9/jetty-distribution/target/distribution/webapps/test.xml 
2012-10-22 16:02:25.725:INFO:oejw.WebInfConfiguration:main: Extract jar:file:/home/gregw/src/jetty-9/jetty-distribution/target/distribution/webapps/test.war!/ to /tmp/jetty-0.0.0.0-8080-test.war-_test-any-/webapp
2012-10-22 16:02:26.097:INFO:oejsh.ContextHandler:main: started o.e.j.w.WebAppContext@4e3ceb07{/test,file:/tmp/jetty-0.0.0.0-8080-test.war-_test-any-/webapp/,AVAILABLE}{/test.war}]]>
    </programlisting>
  </informalexample>
  <para>You also see some warnings like:</para>
  <informalexample>
    <programlisting language="text">
<![CDATA[2012-10-22 16:02:24.748:WARN::main: test-realm is deployed. DO NOT USE IN PRODUCTION! 
2012-10-22 16:02:25.582:WARN::main: async-rest webapp is deployed. DO NOT USE IN PRODUCTION!]]>
    </programlisting>
  </informalexample>
  <para>These warnings are telling you that some demonstration web applications and services are deployed and that you
  should remove them before putting the server into production. You can ignore these warnings while testing, or you can
  see <link linkend="quickstart-deploying-webapps">Deploying Web Applications</link> to learn how to remove
  them.</para>
  <para>After starting Jetty, you can test it by pointing a browser or any HTTP client at port 8080 of the machine. If
  you are running the browser on the same machine as the Jetty instance, the URL to use is:<code>
  http://localhost:8080/</code> and your browser or HTTP client should see the Jetty welcome page and be able to follow
  the links to some test web applications.</para>
  <section xml:id="changing-jetty-port">
    <title>Changing the Jetty Port</title>
    <para>If you see the following exception, you already have something running on the port that Jetty is configured
    to run on and you either need to shut down whatever that process is, or configure Jetty to run on another
    port.</para>
    <informalexample>
      <programlisting language="text">
<![CDATA[java.net.BindException: Address already in use 
  at sun.nio.ch.Net.bind0(Native Method) 
  at sun.nio.ch.Net.bind(Net.java:344) 
  at sun.nio.ch.Net.bind(Net.java:336) 
  at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:199)]]>
      </programlisting>
    </informalexample>
    <para>You can configure Jetty to run on a different port by setting the <code>jetty.port</code> Property on the
    command line:</para>
    <para>
      <code>&gt; java -jar start.jar jetty.port=8081</code>
    </para>
    <para>As alternatives, you can set this property in the <filename>start.ini</filename> file or by editing the use
    of the property in the <filename>etc/jetty-http.xml</filename> configuration file. The way this works is that it
    defines a property that is the <filename>etc/jetty-http.xml</filename> configuration file uses to inject a port
    value into the ServerConnector defined there. For more information see the <link linkend="quickstart-config">
    Quickstart Configuration Guide</link> and <link linkend="configuring-connectors">Configuring
    Connectors</link>.</para>
  </section>
  <section xml:id="starting-https">
    <title>Starting HTTPS</title>
    <para>By values set in the <filename>start.ini</filename> file, Jetty starts the HTTP connector that is defined in
    <filename>etc/jetty-http.xml</filename>. To also start the HTTPS connector defined in <filename>
    etc/jetty-https.xml</filename> you can simply append this configuration file to the command line:</para>
    <para>
      <code>&gt; java -jar start.jar etc/jetty-https.xml</code>
    </para>
    <para>You can now test this connector by pointing your browser to:</para>
    <para>
      <code>https://localhost:8443/</code>
    </para>
    <para>Alternately, you can edit the <filename>start.ini</filename> file and uncomment the line that includes the
    HTTPS configuration file and then start Jetty without any extra command line arguments. Note that you can also
    change the SSL port with the <code>jetty.tls.port</code> Property:</para>
    <para>
      <code>&gt; java -jar start.jar jetty.tls.port=8444 etc/jetty-https.xml</code>
    </para>
    <para>The job of the <code>start.jar</code> command is to interpret the command line and <code>
    start.ini</code> arguments in order to build a java classpath and list of properties and configuration files to
    pass to the main class of the Jetty XML configuration mechanism. The <code>start.jar</code> mechanism has many
    options which are documented in <xref linkend="advanced-jetty-start" />; you can see them in summary by using the
    command:</para>
    <para>
      <code>&gt; java -jar start.jar --help</code>
    </para>
  </section>
  <section xml:id="stopping-jetty">
    <title>Stopping Jetty</title>
    <para>If you have started Jetty from the command line, it is safe to stop it using the normal Ctrl-C key sequence
    to abort it. This triggers an orderly shutdown of the server.</para>
    <para>However, you might have started the server with some advanced <code>start.jar</code> options so that it runs
    in the background:</para>
    <para>
      <code>&gt; java -jar start.jar -DSTOP.PORT=8881 -DSTOP.KEY=magic --daemon &amp;</code>
    </para>
    <para>You should shut down this server with the command:</para>
    <para>
      <code>&gt; java -jar start.jar -DSTOP.PORT=8881 -DSTOP.KEY=magic --stop</code>
    </para>
  </section>
</section>
